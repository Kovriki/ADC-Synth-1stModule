{"ast":null,"code":"var _jsxFileName = \"/Users/polinamazitova/Documents/GitHub/ADC-Synth-1stModule/app/javascript/prototypes/prototype_13/components/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport SC_Button from './SC_Button';\nimport SC_ToggleButtonSet from './SC_ToggleButtonSet';\nimport SC_Slider from './SC_Slider';\nvar synth;\nvar chorus;\nvar pingPongDelay;\nvar distortionNode;\nvar fmOsc;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          synthSettings = _this$state.synthSettings,\n          chorusSettings = _this$state.chorusSettings,\n          pingPongDelaySettings = _this$state.pingPongDelaySettings,\n          distortionSettings = _this$state.distortionSettings,\n          fmOscSettings = _this$state.fmOscSettings;\n      synth = new Tone.Synth(synthSettings);\n      chorus = new Tone.Chorus(chorusSettings).start();\n      pingPongDelay = new Tone.PingPongDelay(pingPongDelaySettings);\n      fmOsc = new Tone.FMOscillator(fmOscSettings);\n      distortionNode = new Tone.Distortion(distortionSettings).toDestination();\n      synth.chain(chorus, pingPongDelay, distortionNode, fmOsc);\n      var sequence = [{\n        time: '0:0:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:0:2',\n        noteName: 'A3',\n        duration: '1n',\n        velocity: 1\n      }, {\n        time: '0:1:0',\n        noteName: 'E3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:2:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:3:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:3:1',\n        noteName: 'E3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:3:2',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '1:0:0',\n        noteName: 'D3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '1:1:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '1:1:2',\n        noteName: 'E4',\n        duration: '4n',\n        velocity: 0.7\n      }, {\n        time: '1:1:3',\n        noteName: 'D4',\n        duration: '4n',\n        velocity: 0.8\n      }, {\n        time: '1:2:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '1:3:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '1:3:2',\n        noteName: 'C4',\n        duration: '4n',\n        velocity: 1\n      }];\n      var part = new Tone.Part(function (time, note) {\n        synth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, sequence).start(0);\n      part.loopEnd = '2m';\n      part.loop = true;\n      Tone.Transport.start();\n    };\n\n    _this.handleValueChange = function (property, value) {\n      var _this$state2 = _this.state,\n          synthSettings = _this$state2.synthSettings,\n          chorusSettings = _this$state2.chorusSettings,\n          pingPongDelaySettings = _this$state2.pingPongDelaySettings,\n          distortionSettings = _this$state2.distortionSettings;\n\n      if (property === 'synthType') {\n        synth.oscillator.type = value;\n        synthSettings.oscillator.type = value;\n      } else if (property === 'pingPongDelayWet') {\n        pingPongDelay.wet.value = value;\n        pingPongDelaySettings.wet = value;\n      } else if (property === 'chorusWet') {\n        chorus.wet.value = value;\n        chorusSettings.wet = value;\n      } else if (property === 'distortionWet') {\n        distortionNode.wet.value = value;\n        distortionSettings.wet = value;\n      }\n\n      _this.setState({\n        synthSettings: synthSettings,\n        chorusSettings: chorusSettings,\n        distortionSettings: distortionSettings,\n        pingPongDelaySettings: pingPongDelaySettings\n      });\n    };\n\n    var _synthSettings = {\n      volume: -20,\n      detune: 0,\n      portamento: 0.05,\n      envelope: {\n        attack: 0.05,\n        attackCurve: 'exponential',\n        decay: 0.2,\n        decayCurve: 'exponential',\n        sustain: 0.2,\n        release: 1.5,\n        releaseCurve: 'exponential'\n      },\n      oscillator: {\n        type: 'sawtooth',\n        modulationType: 'sine',\n        // partialCount: 0,\n        // partials: [],\n        phase: 0,\n        harmonicity: 0.5\n      }\n    };\n    var _chorusSettings = {\n      wet: 0.3,\n      type: 'sine',\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      spread: 180\n    };\n    var _pingPongDelaySettings = {\n      wet: 0.2,\n      delayTime: 0.25,\n      maxDelayTime: 1\n    };\n    var _distortionSettings = {\n      wet: 0,\n      distortion: 1,\n      oversample: '4x'\n    };\n    var _fmOscSettings = {\n      frequency: 200,\n      type: \"square\",\n      modulationType: \"triangle\",\n      harmonicity: 0.2,\n      modulationIndex: 3\n    };\n    _this.state = {\n      synthSettings: _synthSettings,\n      chorusSettings: _chorusSettings,\n      pingPongDelaySettings: _pingPongDelaySettings,\n      distortionSettings: _distortionSettings,\n      fmOscSettings: _fmOscSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          synthSettings = _this$state3.synthSettings,\n          chorusSettings = _this$state3.chorusSettings,\n          pingPongDelaySettings = _this$state3.pingPongDelaySettings,\n          distortionSettings = _this$state3.distortionSettings;\n      var options = ['sine', 'square', 'sawtooth', 'triangle'];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Art Design & Coding Community\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n        name: \"Type\",\n        options: options,\n        value: synthSettings.oscillator.type,\n        property: \"synthType\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: pingPongDelaySettings.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Chorus Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: chorusSettings.wet,\n        property: \"chorusWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Distortion Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: distortionSettings.wet,\n        property: \"distortionWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","SC_Button","SC_ToggleButtonSet","SC_Slider","synth","chorus","pingPongDelay","distortionNode","fmOsc","Container","props","handleStart","state","synthSettings","chorusSettings","pingPongDelaySettings","distortionSettings","fmOscSettings","Synth","Chorus","start","PingPongDelay","FMOscillator","Distortion","toDestination","chain","sequence","time","noteName","duration","velocity","part","Part","note","triggerAttackRelease","loopEnd","loop","Transport","handleValueChange","property","value","oscillator","type","wet","setState","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","modulationType","phase","harmonicity","frequency","delayTime","depth","spread","maxDelayTime","distortion","oversample","modulationIndex","options"],"sources":["/Users/polinamazitova/Documents/GitHub/ADC-Synth-1stModule/app/javascript/prototypes/prototype_13/components/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport SC_Button from './SC_Button'\nimport SC_ToggleButtonSet from './SC_ToggleButtonSet'\nimport SC_Slider from './SC_Slider'\n\nlet synth\nlet chorus\nlet pingPongDelay\nlet distortionNode\nlet fmOsc\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    const synthSettings = {\n      volume: -20,\n      detune: 0,\n      portamento: 0.05,\n      envelope: {\n        attack: 0.05,\n        attackCurve: 'exponential',\n        decay: 0.2,\n        decayCurve: 'exponential',\n        sustain: 0.2,\n        release: 1.5,\n        releaseCurve: 'exponential'\n      },\n      oscillator: {\n        type: 'sawtooth',\n        modulationType: 'sine',\n        // partialCount: 0,\n        // partials: [],\n        phase: 0,\n        harmonicity: 0.5\n      }\n    }\n\n    const chorusSettings = {\n      wet: 0.3,\n      type: 'sine',\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      spread: 180\n    }\n\n    const pingPongDelaySettings = { wet: 0.2, delayTime: 0.25, maxDelayTime: 1 }\n\n    const distortionSettings = {\n      wet: 0,\n      distortion: 1,\n      oversample: '4x'\n    }\n\n    const fmOscSettings = {\n    \tfrequency: 200,\n  \t\ttype: \"square\",\n  \t\tmodulationType: \"triangle\",\n  \t\tharmonicity: 0.2,\n  \t\tmodulationIndex: 3\n    }\n\n    this.state = {\n      synthSettings,\n      chorusSettings,\n      pingPongDelaySettings,\n      distortionSettings,\n      fmOscSettings\n    }\n  }\n\n\n  handleStart = () => {\n    const { synthSettings, chorusSettings, pingPongDelaySettings, distortionSettings, fmOscSettings} = this.state\n\n    synth = new Tone.Synth(synthSettings)\n    chorus = new Tone.Chorus(chorusSettings).start()\n    pingPongDelay = new Tone.PingPongDelay(pingPongDelaySettings)\n    fmOsc = new Tone.FMOscillator(fmOscSettings)\n    distortionNode = new Tone.Distortion(distortionSettings).toDestination()\n\n    synth.chain(chorus, pingPongDelay, distortionNode, fmOsc)\n\n    const sequence = [\n      {\n        time: '0:0:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '0:0:2',\n        noteName: 'A3',\n        duration: '1n',\n        velocity: 1\n      },\n      {\n        time: '0:1:0',\n        noteName: 'E3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '0:2:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '0:3:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '0:3:1',\n        noteName: 'E3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '0:3:2',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '1:0:0',\n        noteName: 'D3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '1:1:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '1:1:2',\n        noteName: 'E4',\n        duration: '4n',\n        velocity: 0.7\n      },\n      {\n        time: '1:1:3',\n        noteName: 'D4',\n        duration: '4n',\n        velocity: 0.8\n      },\n      {\n        time: '1:2:0',\n        noteName: 'C3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '1:3:0',\n        noteName: 'G3',\n        duration: '4n',\n        velocity: 1\n      },\n      {\n        time: '1:3:2',\n        noteName: 'C4',\n        duration: '4n',\n        velocity: 1\n      }\n    ]\n\n    const part = new Tone.Part((time, note) => {\n      synth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, sequence).start(0)\n\n    part.loopEnd = '2m'\n    part.loop = true\n    Tone.Transport.start()\n  }\n\n  handleValueChange = (property, value) => {\n    const {synthSettings, chorusSettings, pingPongDelaySettings, distortionSettings } = this.state\n\n    if (property === 'synthType') {\n      synth.oscillator.type = value\n      synthSettings.oscillator.type = value\n    } else if (property === 'pingPongDelayWet') {\n      pingPongDelay.wet.value = value\n      pingPongDelaySettings.wet = value\n    }  else if (property === 'chorusWet') {\n      chorus.wet.value = value\n      chorusSettings.wet = value\n    }  else if (property === 'distortionWet') {\n      distortionNode.wet.value = value\n      distortionSettings.wet = value\n    }\n\n    this.setState({\n      synthSettings,\n      chorusSettings,\n      distortionSettings,\n      pingPongDelaySettings\n    });\n  }\n\n\n\n\n  render() {\n    const { synthSettings, chorusSettings, pingPongDelaySettings, distortionSettings} = this.state\n\n    const options = ['sine', 'square', 'sawtooth', 'triangle']\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"Art Design & Coding Community\"\n          handleClick={this.handleStart}\n        />\n\n        <SC_ToggleButtonSet\n          name=\"Type\"\n          options={options}\n          value={synthSettings.oscillator.type}\n          property=\"synthType\"\n          handleChange={this.handleValueChange}\n        />\n\n        <SC_Slider\n          name=\"Delay Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={pingPongDelaySettings.wet}\n          property=\"pingPongDelayWet\"\n          handleChange={this.handleValueChange}\n        />\n\n        <SC_Slider\n          name=\"Chorus Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={chorusSettings.wet}\n          property=\"chorusWet\"\n          handleChange={this.handleValueChange}\n        />\n\n        <SC_Slider\n          name=\"Distortion Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={distortionSettings.wet}\n          property=\"distortionWet\"\n          handleChange={this.handleValueChange}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}