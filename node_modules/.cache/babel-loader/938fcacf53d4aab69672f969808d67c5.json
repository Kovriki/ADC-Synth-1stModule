{"ast":null,"code":"var _jsxFileName = \"/Users/polinamazitova/Documents/GitHub/ADC-Synth-1stModule/app/javascript/prototypes/prototype_18/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider'; // import SC_Knob from './components/SC_Knob'\n\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar samplerChannel;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = bassSettings.sequence.loop; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = melodySettings.sequence.loop; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00046-Vermona-DRM1-MK3-BassDrum12.mp3',\n          A2: '00036-Tama-TS-305-BassDrum-3.mp3',\n          A3: '00037-Tama-TS-305-BassDrum-6.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = drumsSettings.sequence.loop;\n      Tone.Transport.start();\n\n      _this.setState({\n        isStarted: true\n      });\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      } else if (property === 'synthShowEnvelope') {\n        console.log(bassSettings, bassSettings.synthUI, value);\n        bassSettings.synthUI.envelopeShow = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'melodyChorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      } else if (property === 'synthShowEnvelope') {\n        melodySettings.synthUI.envelopeShow = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        console.log('=====BEFORE=====', drumsSettings.channel.mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n        var mute = !drumsSettings.channel.mute;\n        samplerChannel.mute = mute;\n        drumsSettings.channel.mute = mute;\n        console.log('=====AFTER=====', mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n      } else if (property === 'channelPan') {\n        samplerChannel.pan.value = value;\n        drumsSettings.channel.pan = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.handleToggleUIShow = function () {\n      var isUIShown = _this.state.isUIShown;\n\n      _this.setState({\n        isUIShown: !isUIShown\n      });\n    };\n\n    _this.renderStartButton = function () {\n      return /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"\\u0422\\u042B \\u041F\\u0420\\u041E\\u041C\\u0410\\u0425\\u041D\\u0401\\u0428\\u042C\\u0421\\u042F!\",\n        handleClick: _this.handleStart,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderShowHideButton = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggleUIButton\",\n        onClick: _this.handleToggleUIShow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, \"\\u041F\\u041E\\u041A\\u0410\\u0416\\u0418 \\u041C\\u0415\\u041D\\u042F!\");\n    };\n\n    _this.renderUI = function () {\n      var _this$state2 = _this.state,\n          isUIShown = _this$state2.isUIShown,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          drumsSettings = _this$state2.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instrumentUI\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: _this.handleBassValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: _this.handleMelodyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.pingPongDelay.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Surface, {\n        minX: \"0\",\n        maxX: \"1\",\n        stepX: \"0.01\",\n        valueX: \"0.5\",\n        minY: \"0\",\n        maxY: \"1\",\n        stepY: \"0.01\",\n        valueY: \"0.5\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Chorus Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          isStarted = _this$state3.isStarted,\n          isUIShown = _this$state3.isUIShown;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }\n      }, isStarted ? this.renderShowHideButton() : this.renderStartButton(), isUIShown ? this.renderUI() : '');\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","Channel","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","samplerChannel","Container","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","sampler","Sampler","urls","A1","A2","A3","baseUrl","channel","drumsPart","Transport","setState","isStarted","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","console","log","synthUI","envelopeShow","handleMelodyValueChange","spread","handleDrumsValueChange","volume","mute","pan","handleToggleUIShow","isUIShown","renderStartButton","renderShowHideButton","renderUI"],"sources":["/Users/polinamazitova/Documents/GitHub/ADC-Synth-1stModule/app/javascript/prototypes/prototype_18/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport Channel from './modules/Channel.jsx'\n\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n// import SC_Knob from './components/SC_Knob'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nlet samplerChannel\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = bassSettings.sequence.loop\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = melodySettings.sequence.loop\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00046-Vermona-DRM1-MK3-BassDrum12.mp3',\n        A2: '00036-Tama-TS-305-BassDrum-3.mp3',\n        A3: '00037-Tama-TS-305-BassDrum-6.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = drumsSettings.sequence.loop\n\n    Tone.Transport.start()\n\n    this.setState({\n      isStarted: true\n    })\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    } else if (property === 'synthShowEnvelope') {\n      console.log(bassSettings, bassSettings.synthUI, value)\n      bassSettings.synthUI.envelopeShow = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'melodyChorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    } else if (property === 'synthShowEnvelope') {\n      melodySettings.synthUI.envelopeShow = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      console.log(\n        '=====BEFORE=====',\n        drumsSettings.channel.mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n\n      const mute = !drumsSettings.channel.mute\n      samplerChannel.mute = mute\n      drumsSettings.channel.mute = mute\n\n      console.log(\n        '=====AFTER=====',\n        mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n    } else if (property === 'channelPan') {\n      samplerChannel.pan.value = value\n      drumsSettings.channel.pan = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  handleToggleUIShow = () => {\n    const { isUIShown } = this.state\n\n    this.setState({\n      isUIShown: !isUIShown\n    })\n  }\n\n  renderStartButton = () => {\n    return (\n      <SC_Button\n        text=\"ТЫ ПРОМАХНЁШЬСЯ!\"\n        handleClick={this.handleStart}\n      />\n    )\n  }\n\n  renderShowHideButton = () => {\n    return (\n      <div className=\"toggleUIButton\" onClick={this.handleToggleUIShow}>\n        ПОКАЖИ МЕНЯ!\n      </div>\n    )\n  }\n\n  renderUI = () => {\n    const {\n      isUIShown,\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    } = this.state\n\n    return (\n      <div className=\"instrumentUI\">\n\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n        <div>\n          <ToneSynth\n            settings={melodySettings}\n            handleValueChange={this.handleMelodyValueChange}\n          />\n\n\n\n\n          <SC_Slider\n            name=\"Delay Wet\"\n            min={0}\n            max={1}\n            step={0.01}\n            value={bassSettings.pingPongDelay.wet}\n            property=\"pingPongDelayWet\"\n            handleChange={this.handleDrumsValueChange}\n          />\n\n          <Surface\n           minX =\"0\"\n           maxX =\"1\"\n           stepX =\"0.01\"\n           valueX = \"0.5\"\n           minY =\"0\"\n           maxY =\"1\"\n           stepY =\"0.01\"\n           valueY =\"0.5\"\n          />\n\n          <SC_Slider\n            name=\"Chorus Wet\"\n            min={0}\n            max={1}\n            step={0.01}\n            value={bassSettings.chorus.wet}\n            property=\"chorusWet\"\n            handleChange={this.handleDrumsValueChange}\n          />\n\n          <Channel\n            settings={drumsSettings}\n            handleValueChange={this.handleDrumsValueChange}\n          />\n\n\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { isStarted, isUIShown } = this.state\n\n    return (\n      <div className=\"Container\">\n        {isStarted ? this.renderShowHideButton() : this.renderStartButton()}\n        {isUIShown ? this.renderUI() : ''}\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}